{"version":3,"sources":["components/Chatbot/brain.rive","components/Landing/index.jsx","components/BeerBtn/index.jsx","components/Chatbot/index.jsx","components/Tea/index.jsx","components/Home/index.jsx","services/tweetjs.js","components/Tweets/index.jsx","services/fetchUrl.js","components/WhatsNext/index.jsx","components/Horoscope/index.jsx","services/getCatFact.js","components/RandomCats/index.jsx","services/getCat.js","components/App/index.jsx","serviceWorker.js","index.js"],"names":["module","exports","Landing","to","className","Component","BeerBtn","this","props","onClickClose","modalClosed","closeModal","onClick","src","alt","Chatbot","scrollToBottom","messagesEnd","scrollIntoView","behavior","console","log","bot","RiveScript","brains","require","loadFile","then","sortReplies","botReply","catch","err","message_container","document","querySelector","form","input_box","message","innerHTML","addEventListener","e","preventDefault","messageNoAccents","normalize","replace","reply","selfReply","value","handleChatbot","id","type","placeholder","classname","style","float","clear","ref","el","React","Tea","handleTea","Home","ReactTypingEffectDemo","speed","eraseDelay","staticText","text","chatbotOpen","btnBeer","onClickBeer","tea","TweetJs","ListTweetsOnUserTimeline","screenName","callback","_callApi","Action","ScreenName","Search","query","Query","request","xhr","XMLHttpRequest","URL","open","onreadystatechange","readyState","DONE","status","JSON","parse","response","send","stringify","Tweets","data","updateTweets","tweets","map","key","tweetId","options","width","fetchUrl","url","fetch","json","WhatsNext","useState","seriesList","randomSelection","setRandomSelection","seriesResult","setSeriesResult","handleRandomClick","randomNumber","Math","floor","random","length","suggestion","htmlFor","name","onChange","inputValue","currentTarget","serie","index","show","suggestionOrEmpty","Fragment","buildSelectSection","accData","Horoscope","state","alertMessage","modalEmoji","getResultHoroscope","bind","closeEmoji","event","setState","result","reduce","a","b","getHoroscope","parseInt","push","emojiAsign","horoscope","messageEmoji","action","sendValueToConstructor","showEmoji","catFacts","fact","RandomCats","catData","catFact","handleCatFetch","handleCatFactFetch","error","getCatFact","href","target","rel","App","tweetsResponse","statuses","id_str","number","emojiHoroscope","localStorage","setItem","path","component","exact","render","from","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","getElementById","process","origin","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"yOAAAA,EAAOC,QAAU,IAA0B,oC,uPCiB5BC,G,uLAXP,OACI,kBAAC,IAAD,CAAMC,GAAG,UACL,yBAAKC,UAAU,sBACX,wBAAIA,UAAU,kBAAd,cACA,yBAAKA,UAAU,kBAAf,Y,GANEC,c,iBCePC,G,6LAfD,IAAD,EACgCC,KAAKC,MAAlCC,EADH,EACGA,aACFC,EAFD,EACiBC,WACW,SAAW,GAE5C,OACI,yBAAKP,UAAS,0BAAsBM,IAChC,yBAAKN,UAAU,2BACX,uBAAGA,UAAU,0BAA0BQ,QAASH,IAChD,yBAAKL,UAAU,YAAYS,IAAI,6DAA6DC,IAAK,+C,GAT/FT,c,yBC0EPU,E,2MArEbC,eAAiB,WACf,EAAKC,YAAYC,eAAe,CAAEC,SAAU,WAC5CC,QAAQC,IAAI,W,mFAGO,IAAD,OACdC,EAAM,IAAIC,IAGRC,EAAS,CADGC,EAAQ,KAK1BH,EAAII,SAASF,GAAQG,MAwBrB,WACAL,EAAIM,cACJC,EAAS,2BA1B2BC,OA4BpC,SAAqBC,GACrBX,QAAQC,IAAI,yBAA0BU,MA3BtC,IAAMC,EAAoBC,SAASC,cAAc,aAC3CC,EAAOF,SAASC,cAAc,QAC9BE,EAAYH,SAASC,cAAc,SAOzC,SAASL,EAASQ,GAClBL,EAAkBM,WAAlB,2BAAmDD,EAAnD,UAPAF,EAAKI,iBAAiB,UAAU,SAACC,GACjCA,EAAEC,iBACF,EAAKzB,iBAQL,SAAmBqB,GACjB,IAAMK,EAAmBL,EAAQM,UAAU,OAAOC,QAAQ,mBAAmB,IAC7EZ,EAAkBM,WAAlB,4BAAoDD,EAApD,UAGAf,EAAIuB,MAAM,aAAcH,GAAkBf,MAAK,SAASkB,GACxDhB,EAASgB,MAbXC,CAAUV,EAAUW,OACpBX,EAAUW,MAAQ,MAsBlBxC,KAAKS,mB,2CAILT,KAAKS,mB,+BAGG,IAAD,OACCgC,EAAkBzC,KAAKC,MAAvBwC,cACR,OACE,yBAAK5C,UAAU,QACb,yBAAKA,UAAU,iBAAiBQ,QAASoC,GAAe,uBAAG5C,UAAU,kBACrE,yBAAKA,UAAU,aACf,yBAAK6C,GAAG,SACR,0BAAM7C,UAAU,WACd,2BAAO8C,KAAK,OAAOC,YAAY,iCAEjC,yBAAKC,UAAU,QAAQC,MAAO,CAAEC,MAAM,OAAQC,MAAO,QAChDC,IAAK,SAACC,GAAS,EAAKxC,YAAcwC,U,GAhEzBC,IAAMrD,WC0BbsD,G,uLA5BH,IACAC,EAAcrD,KAAKC,MAAnBoD,UACR,OACE,yBAAKxD,UAAU,OACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,0BAA0BQ,QAASgD,IAChD,yBAAKxD,UAAU,cACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,uBAGnB,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,oBAGnB,yBAAKA,UAAU,qB,GArBTsD,IAAMrD,YCqFTwD,E,2MAhFbC,sBAAwB,WACtB,OACE,yBAAK1D,UAAU,4BACb,kBAAC,IAAD,CACEA,UAAU,8BACV2D,MAAO,GACPC,WAAY,IACZC,WAAW,gBACXC,KAAM,CACJ,aACA,kBACA,4BACA,sBACA,oCACA,0EACA,0BACA,cACA,iCACA,0BACA,uCACA,mBACA,sCACA,uBACA,mBACA,oB,wEAOA,IAAD,EAUH3D,KAAKC,MARP2D,EAFK,EAELA,YACAnB,EAHK,EAGLA,cACAoB,EAJK,EAILA,QACA3D,EALK,EAKLA,aACAE,EANK,EAMLA,WACA0D,EAPK,EAOLA,YACAT,EARK,EAQLA,UACAU,EATK,EASLA,IAEF,OACE,yBAAKlE,UAAU,QACZG,KAAKuD,wBACN,yBAAK1D,UAAS,wBAAmB+D,EAAc,OAAS,eACrDA,EACC,kBAAC,EAAD,CAASnB,cAAeA,IAExB,yBAAK5C,UAAU,wBAAwBQ,QAASoC,GAC9C,yBAAK5C,UAAU,6BACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,cACf,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,eACf,yBAAKA,UAAU,gBAEjB,uBAAGA,UAAU,8BAAb,WAIHkE,EAAM,kBAAC,EAAD,CAAKV,UAAWA,IAAgB,KACzC,yBAAKxD,UAAU,4BACZgE,EACC,kBAAC,EAAD,CAAS3D,aAAcA,EAAcE,WAAYA,IAC/C,KACJ,yBAAKP,UAAU,YAAYQ,QAASyD,GAApC,gBAGA,yBAAKjE,UAAU,oBAAoBQ,QAASgD,GAA5C,4B,GAxESvD,aCHNkE,EAAU,CACrBC,yBAA0B,SAASC,EAAYC,GAC7CH,EAAQI,SACN,CACEC,OAAQ,2BACRC,WAAYJ,GAEdC,IAGJI,OAAQ,SAASC,EAAOL,GACtBH,EAAQI,SACN,CACEC,OAAQ,SACRI,MAAOD,GAETL,IAGJC,SAAU,SAASM,EAASP,GAC1B,IAAIQ,EAAM,IAAIC,eACdC,IAAM,mCACNF,EAAIG,KAAK,OAAQD,KACjBF,EAAII,mBAAqB,WACnB/E,KAAKgF,aAAeJ,eAAeK,MAAwB,MAAhBjF,KAAKkF,QAClDf,EAASgB,KAAKC,MAAMT,EAAIU,YAG5BV,EAAIW,KAAKH,KAAKI,UAAUb,M,QC3BPc,G,kMACE,IAAD,OAClBxB,EAAQO,OAAO,sBAAsB,SAAAkB,GACnC,EAAKxF,MAAMyF,aAAaD,Q,+BAIlB,IACAE,EAAW3F,KAAKC,MAAhB0F,OACR,OACE,wBAAI9F,UAAU,eACX8F,EAAOC,KAAI,SAAAlD,GAAE,OACZ,wBAAI7C,UAAU,cAAcgG,IAAKnD,GAC/B,kBAAC,IAAD,CAAmBoD,QAASpD,EAAIqD,QAAS,CAAEC,MAAO,oB,GAb1BlG,c,QCHrBmG,G,MAFE,SAACC,GAAD,OAASC,MAAMD,GAAK9E,MAAK,SAAAiE,GAAQ,OAAGA,EAASe,YC+E/CC,EAzEG,WAAO,IAAD,EACwBC,mBAAS,IAA7CC,EADY,sBAE4BD,mBAAS,IAFrC,mBAEZE,EAFY,KAEKC,EAFL,OAGsBH,mBAAS,IAH/B,mBAGZI,EAHY,KAGEC,EAHF,KAuBdC,EAAoB,WACtB,IAAMC,EAAeC,KAAKC,MAAMD,KAAKE,SAAWT,EAAWU,QACrDC,EAAaX,EAAWM,GAC9BJ,EAAmBS,IAevB,OACI,6BAASrH,UAAU,yBACf,yBAAKS,IAAI,6DAA6DC,IAAI,qBAC1E,qFACA,yBAAKV,UAAU,uBACX,wBAAIA,UAAU,8BAAd,2IAIA,yBAAKA,UAAU,+BACX,2BAAOA,UAAU,0BAA0BsH,QAAQ,UAAnD,UACA,2BACItH,UAAU,0BACV8C,KAAK,OACLyE,KAAK,SACLC,SAlDC,SAACpF,GAClB,IAAMqF,EAAarF,EAAEsF,cAAc/E,MACnCyD,EAVU,wCAUWqB,GACpBlG,MAAK,SAAAqE,GACF5E,QAAQC,IAAI2E,GACZkB,EAAgBlB,UAgDZ,wBAAI5F,UAAU,2BAvCf6G,EAAad,KAAI,SAAC4B,EAAOC,GAAR,OAAkB,wBAAI5H,UAAU,mBAAmBQ,QAAS,GAAIwF,IAAK4B,GAAQD,EAAME,KAAKN,UA0CxG,wBAAIvH,UAAU,oBA9Cf0G,EAAWX,KAAI,SAAC4B,EAAOC,GAAR,OAAkB,wBAAI5H,UAAU,mBAAmBgG,IAAK4B,GAAQD,OAiD9E,yBAAK3H,UAAU,oCApCA,WACvB,IACM8H,EAAoBnB,GADL,iCAGrB,OACI,kBAAC,IAAMoB,SAAP,KACI,wBAAI/H,UAAU,gCAAgC8H,GAC9C,4BAAQ9H,UAAU,gCAAgCQ,QAASuG,GAA3D,oBA8BKiB,OCrEjBC,G,MAAU,IAkJCC,E,YA/Ib,WAAY9H,GAAQ,IAAD,8BACjB,4CAAMA,KAED+H,MAAQ,CACXC,cAAc,EACdC,YAAY,GAGd,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBATD,E,gFAYAE,GAEjB,GADAA,EAAMpG,iBACgB,IAAnB4F,EAAQb,OACTjH,KAAKuI,SAAS,CAAEN,cAAc,QACzB,CACL,IAAMO,EAASV,EAAQW,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAEzCb,EAAQb,QAAU,GACnBjH,KAAKC,MAAM2I,aAAaJ,GACxBxI,KAAKuI,SAAS,CAAEN,cAAc,EAAOC,YAAY,KAEjDlI,KAAKuI,SAAS,CAAEN,cAAc,O,6CAMbK,GACrB,IAAM9F,EAAQ8F,EAAMf,cAAc/E,MAC5BiD,EAAOoD,SAASrG,GACtBsF,EAAQgB,KAAKrD,GACb5E,QAAQC,IAAIgH,K,gCAGJiB,GACR,MAAkB,cAAfA,EACM,4BACgB,UAAfA,EACD,0BACiB,SAAfA,EACF,8BADF,I,mCAMP/I,KAAKuI,SAAS,CAAEL,YAAY,M,+BAGpB,IAEAc,EAAchJ,KAAKC,MAAnB+I,UAEJC,EAAe,GAUnB,MARiB,cAAdD,EACDC,EAAe,uBAAGpJ,UAAU,0BAAb,qDACO,UAAdmJ,EACRC,EAAe,uBAAGpJ,UAAU,0BAAb,4CACQ,SAAdmJ,IACTC,EAAe,uBAAGpJ,UAAU,0BAAb,4DAIf,yBAAKA,UAAU,aAEb,0BAAMqJ,OAAO,GAAGrJ,UAAU,mBACxB,8BAAUA,UAAU,6BAClB,4BAAQA,UAAU,2BAAlB,uCACE,2BAAOsH,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,yCAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,0BAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,oDAKJ,8BAAU3C,UAAU,6BAClB,4BAAQA,UAAU,2BAAlB,4CACE,2BAAOsH,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,kBAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,2BAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,qBAKJ,8BAAU3C,UAAU,6BAClB,4BAAQA,UAAU,2BAAlB,sDACE,2BAAOsH,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,IAAIF,MAAM,MADhH,0BAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,KAAKF,MAAM,MADjH,0CAIA,2BAAO2E,QAAQ,IAAItH,UAAU,oBAC3B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,KAAKF,MAAM,MADjH,kCAKJ,8BAAU3C,UAAU,6BAClB,4BAAQA,UAAU,2BAA0B,qCAA5C,8CACE,2BAAOsH,QAAQ,KAAKtH,UAAU,oBAC5B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,KAAKF,MAAM,QADjH,SAIA,2BAAO2E,QAAQ,KAAKtH,UAAU,oBAC5B,2BAAOwH,SAAUrH,KAAKmJ,uBAAwBxG,KAAK,QAAQ9C,UAAU,mBAAmBuH,KAAK,IAAI1E,GAAG,KAAKF,MAAM,MADjH,QAKJ,4BAAQnC,QAASL,KAAKmI,mBAAoBtI,UAAU,eAAe8C,KAAK,UAAxE,SACC3C,KAAKgI,MAAMC,aAAe,uBAAGpI,UAAU,uBAAb,wCAA2E,IAEtGG,KAAKgI,MAAME,WACX,yBAAKrI,UAAU,+BACb,yBAAKA,UAAU,6BACf,uBAAGA,UAAU,0BAA0BQ,QAASL,KAAKqI,aACnD,yBAAKxI,UAAU,0BAA0BS,IAAKN,KAAKoJ,UAAUJ,GAAYzI,IAAI,eAC3E0I,IAIN,U,GAzIc9F,IAAMrD,WCLxBuJ,EAAW,CACf,CACE3G,GAAI,EACJ4G,KAAO,uFAET,CACE5G,GAAI,EACJ4G,KAAO,gCAET,CACE5G,GAAI,EACJ4G,KAAO,mFAET,CACE5G,GAAI,EACJ4G,KAAO,kHAET,CACE5G,GAAI,EACJ4G,KAAO,yGAET,CACE5G,GAAI,EACJ4G,KAAO,+CAET,CACE5G,GAAI,EACJ4G,KAAO,sFAET,CACE5G,GAAI,EACJ4G,KAAO,gDAET,CACE5G,GAAI,EACJ4G,KAAO,4DAET,CACE5G,GAAI,EACJ4G,KAAO,8BAET,CACE5G,GAAI,GACJ4G,KAAO,wFAET,CACE5G,GAAI,GACJ4G,KAAI,+GAEN,CACE5G,GAAI,GACJ4G,KAAO,+EAET,CACE5G,GAAI,GACJ4G,KAAI,+GAEN,CACE5G,GAAI,GACJ4G,KAAO,wEAET,CACE5G,GAAI,GACJ4G,KAAO,6DAET,CACE5G,GAAI,GACJ4G,KAAO,mEAET,CACE5G,GAAI,GACJ4G,KAAM,iFAER,CACE5G,GAAI,GACJ4G,KAAM,iFAER,CACE5G,GAAI,GACJ4G,KAAM,yFCbKC,G,kBA5Db,WAAYtJ,GAAO,IAAD,8BAChB,4CAAMA,KACD+H,MAAQ,CACXwB,QAAS,GACTC,QAAS,IAEX,EAAKC,eAAiB,EAAKA,eAAetB,KAApB,gBACtB,EAAKuB,mBAAqB,EAAKA,mBAAmBvB,KAAxB,gBAPV,E,iFAWhBpI,KAAK2J,uB,uCAGW,IAAD,OACf,OClBKxD,MAHQ,8CAIZ/E,MAAK,SAAAiE,GAAQ,OAAIA,EAASe,UAC1B7E,OAAM,SAAAqI,GAAK,OAAI/I,QAAQ+I,MAAMA,MDiB3BxI,MAAK,SAAAqE,GAAI,OAAI,EAAK8C,SAAS,CAACiB,QAAS/D,EAAK,U,2CAI7C,IAAMgE,EDyDgB,WACxB,IAAM5C,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UACrC,OAAOqC,EAASxC,GC3DEgD,GAChB7J,KAAKuI,SAAS,CAACkB,QAAUA,EAAQH,S,+BAG1B,IACCE,EAAYxJ,KAAKgI,MAAjBwB,QACAE,EAAmB1J,KAAnB0J,eACR,OACE,yBAAK7J,UAAU,yBACb,wBAAIA,UAAU,qBAAd,kCACA,uBAAGA,UAAU,wBAAb,4CAGA,4BAAQA,UAAU,4BAA4BQ,QAASqJ,GAAvD,YAGCF,EAAQtD,KACP,yBACE5F,IAAKkJ,EAAQtD,IACb3F,IAAG,qBAAgBiJ,EAAQ9G,IAC3B7C,UAAU,sBAGb2J,EAAQtD,KACP,yBAAKrG,UAAU,sBACb,uBACEA,UAAU,yBACViK,KAAI,uDAAkD9J,KAAKgI,MAAMyB,QAA7D,gBAA4ED,EAAQtD,KACxF6D,OAAO,SACPC,IAAI,uBAJN,4C,GA9CalK,cE8HVmK,E,YAxHb,WAAYhK,GAAQ,IAAD,8BACjB,4CAAMA,KAeRyF,aAAe,SAAAwE,GACb,EAAK3B,SAAS,CACZ5C,OAAQuE,EAAeC,SAASvE,KAAI,qBAAGwE,aAlBxB,EA2CnBtG,YAAc,WACZ,EAAKyE,SAAS,CAAE1E,SAAS,KA5CR,EA+CnB3D,aAAe,WACb,EAAKqI,SAAS,CAAEnI,YAA2B,EAAOyD,SAAS,KA9C3D,EAAKmE,MAAQ,CACXrC,OAAQ,GACR/B,aAAa,EACbC,SAAS,EACTzD,YAAY,EACZ4I,UAAW,GACXjF,KAAK,GAGP,EAAK6E,aAAe,EAAKA,aAAaR,KAAlB,gBACpB,EAAK3F,cAAgB,EAAKA,cAAc2F,KAAnB,gBACrB,EAAK/E,UAAY,EAAKA,UAAU+E,KAAf,gBAbA,E,0EAsBNiC,GAEX,IAAIC,EAAiB,GAEjBD,GAAU,EACZC,EAAiB,YACRD,GAAU,GAAKA,GAAU,EAClCC,EAAiB,QACRD,GAAU,IACnBC,EAAiB,QAGnBtK,KAAKuI,SAAS,CAACS,UAAWsB,IAE1BC,aAAaC,QAAQ,QAASF,K,sCAI9BtK,KAAKuI,SAAS,CAAC3E,aAAc5D,KAAKgI,MAAMpE,gB,kCAYxC5D,KAAKuI,SAAS,CAACxE,KAAO/D,KAAKgI,MAAMjE,MACjClD,QAAQC,IAAId,KAAKgI,MAAMjE,O,+BAGf,IAAD,SAC8D/D,KAAKgI,MAAlErC,EADD,EACCA,OAAQ9B,EADT,EACSA,QAASzD,EADlB,EACkBA,WAAYwD,EAD9B,EAC8BA,YAAaG,EAD3C,EAC2CA,IAAKiF,EADhD,EACgDA,UAEvD,OACE,yBAAKnJ,UAAU,OACb,gCACE,6BACE,wBAAIA,UAAU,YACZ,4BACE,kBAAC,IAAD,CAAMD,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,eAAT,8BAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,SAAT,mBAKR,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6K,KAAK,WAAWC,UAAW/K,IAClC,kBAAC,IAAD,CACAgL,OAAK,EAACF,KAAK,QACXG,OAAQ,kBACN,kBAAC,EAAD,CAAMhH,YAAaA,EACjBnB,cAAe,EAAKA,cACpBqB,YAAc,EAAKA,YACnBD,QAAUA,EACV3D,aAAe,EAAKA,aACpBE,WAAaA,EACb2D,IAAKA,EACLV,UAAW,EAAKA,eAGpB,kBAAC,IAAD,CACEsH,OAAK,EAACF,KAAK,UACXG,OAAQ,kBACN,kBAAC,EAAD,CAAQlF,aAAc,EAAKA,aAAcC,OAAQA,OAGrD,kBAAC,IAAD,CAAOgF,OAAK,EAACF,KAAK,cAAcC,UAAWrE,IAC3C,kBAAC,IAAD,CACEsE,OAAK,EAACF,KAAK,aACXG,OAAQ,kBACN,kBAAC,EAAD,CAAWhC,aAAc,EAAKA,aAAcI,UAAWA,OAG3D,kBAAC,IAAD,CAAO2B,OAAK,EAACF,KAAK,QAAQC,UAAWnB,IACrC,kBAAC,IAAD,CAAUsB,KAAK,IAAIjL,GAAG,oB,GAjHhBE,aCEZgL,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTjK,MAAK,SAAAsK,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5D,QACfuD,UAAUC,cAAcO,YAI1BlL,QAAQC,IACN,iHAKEwK,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7K,QAAQC,IAAI,sCAGRwK,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BnK,OAAM,SAAAqI,GACL/I,QAAQ+I,MAAM,4CAA6CA,MC1FjEsC,IAAStB,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFlJ,SAASyK,eAAe,SDYnB,SAAkBb,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI1G,IAAIuH,IAAwBpB,OAAOC,SAASnB,MACpDuC,SAAWrB,OAAOC,SAASoB,OAIvC,OAGFrB,OAAOhJ,iBAAiB,QAAQ,WAC9B,IAAMqJ,EAAK,UAAMe,IAAN,sBAEPtB,IAgEV,SAAiCO,EAAOC,GAEtCnF,MAAMkF,GACHjK,MAAK,SAAAiE,GAEJ,IAAMiH,EAAcjH,EAASkH,QAAQC,IAAI,gBAEnB,MAApBnH,EAASH,QACO,MAAfoH,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ClB,UAAUC,cAAckB,MAAMtL,MAAK,SAAAsK,GACjCA,EAAaiB,aAAavL,MAAK,WAC7B4J,OAAOC,SAAS2B,eAKpBxB,EAAgBC,EAAOC,MAG1B/J,OAAM,WACLV,QAAQC,IACN,oEArFA+L,CAAwBxB,EAAOC,GAI/BC,UAAUC,cAAckB,MAAMtL,MAAK,WACjCP,QAAQC,IACN,iHAMJsK,EAAgBC,EAAOC,OCrC/BE,K","file":"static/js/main.6cafbee1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.917b0c0b.rive\";","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Landing.scss';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return(\r\n            <Link to=\"./home\">\r\n                <div className='landing__container'>\r\n                    <h1 className='landing__title'>NI TAN MAL</h1>\r\n                    <div className='landing__smile'>:)</div>\r\n                </div>\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport './BeerBtn.scss';\r\n\r\nclass BeerBtn extends Component {\r\n    render() {\r\n        const { onClickClose, closeModal } = this.props;\r\n        const modalClosed = closeModal ? 'closed' : '';\r\n        \r\n        return(\r\n            <div className={`beer__container ${ modalClosed }`}>\r\n                <div className='beer__container_content'>\r\n                    <i className=\"fas fa-times tea__close\" onClick={onClickClose}></i>\r\n                    <img className='beer__gif' src='https://media.giphy.com/media/3o7btZjaYxqkGyOYA8/giphy.gif' alt ='animated gif of a beer on an unicorn'></img> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BeerBtn;","import React from 'react';\r\nimport './Chatbot.scss';\r\nimport RiveScript from 'rivescript';\r\n\r\n\r\n\r\nclass Chatbot extends React.Component {\r\n\r\n  scrollToBottom = () => {\r\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    console.log('scroll');\r\n  }\r\n\r\n  componentDidMount() {\r\n    let bot = new RiveScript();\r\n\r\n    const responses = require('./brain.rive');\r\n    const brains = [\r\n      responses\r\n    // './another-category-sample.rive\r\n    ];\r\n    bot.loadFile(brains).then(botReady).catch(botNotReady);\r\n\r\n    const message_container = document.querySelector('.messages');\r\n    const form = document.querySelector('form');\r\n    const input_box = document.querySelector('input');\r\n    form.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    this.scrollToBottom();\r\n    selfReply(input_box.value);\r\n    input_box.value = '';\r\n    });\r\n    function botReply(message){\r\n    message_container.innerHTML += `<div class=\"bot\">${message}</div>`;\r\n    // location.href = '#edge';\r\n    }\r\n    function selfReply(message){\r\n      const messageNoAccents = message.normalize('NFD').replace(/[\\u0300-\\u036f]/g,\"\");;\r\n      message_container.innerHTML += `<div class=\"self\">${message}</div>`;\r\n      // location.href = '#edge';\r\n      \r\n      bot.reply(\"local-user\", messageNoAccents).then(function(reply) {\r\n      botReply(reply);\r\n      });\r\n      }\r\n    function botReady(){\r\n    bot.sortReplies();\r\n    botReply('Hola, buen señor!');\r\n    }\r\n    function botNotReady(err){\r\n    console.log(\"An error has occurred.\", err);\r\n  }\r\n    this.scrollToBottom();\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  render() {\r\n    const { handleChatbot } = this.props;\r\n    return (\r\n      <div className=\"chat\">\r\n        <div className=\"chatbot__close\" onClick={handleChatbot}><i className=\"fas fa-times\"></i></div>\r\n        <div className=\"messages\"></div>\r\n        <div id=\"edge\"></div>\r\n        <form className=\"actions\">\r\n          <input type=\"text\" placeholder=\"press 'Enter' to send…\"/>\r\n        </form> \r\n        <div classname=\"dummy\" style={{ float:\"left\", clear: \"both\" }}\r\n             ref={(el) => { this.messagesEnd = el; }}>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chatbot","import React from 'react';\r\nimport './Tea.scss';\r\n\r\nclass Tea extends React.Component {\r\n  render() {\r\n    const { handleTea } = this.props;\r\n    return(\r\n      <div className=\"tea\">\r\n        <div className=\"tea__background\">\r\n          <div className=\"tea__container\">\r\n            <i className=\"fas fa-times tea__close\" onClick={handleTea}></i>\r\n            <div className=\"tea__glass\">\r\n              <div className=\"tea__top\"></div>\r\n              <div className=\"tea__glass--inside\">\r\n                <div className=\"tea__liquid\"></div>\r\n                <div className=\"tea__liquid--top\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"tea__pouring\"></div>\r\n            <div className=\"tea__bag--container\">\r\n              <div className=\"tea__bag\">\r\n                <div className=\"tea__bag--top\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"tea__milk\"></div>\r\n          </div>\r\n        </div>  \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tea;","import React, { Component } from \"react\";\r\nimport ReactTypingEffect from \"react-typing-effect\";\r\nimport \"./Home.scss\";\r\nimport BeerBtn from \"../BeerBtn\";\r\nimport Chatbot from \"../Chatbot/index\";\r\nimport Tea from \"../Tea/index\";\r\n\r\nclass Home extends Component {\r\n  ReactTypingEffectDemo = () => {\r\n    return (\r\n      <div className=\"typing-effect__container\">\r\n        <ReactTypingEffect\r\n          className=\"typing-effect__dynamic-text\"\r\n          speed={50}\r\n          eraseDelay={3000}\r\n          staticText=\"KEEP CALM AND\"\r\n          text={[\r\n            \"¡venga!\",\r\n            \"pues ni tan mal\",\r\n            \"¿qué día es hoy?\",\r\n            \"¡grupo favorito!\",\r\n            \"¿quién está descansando?\",\r\n            \"siempre es todas las anteriores... hasta que no es todas las anteriores\",\r\n            \"los muertos no maquetan\",\r\n            \"A CHOLONACO\",\r\n            \"¡vamos a verlo funcionando!\",\r\n            \"lo he puesto en andaluz\",\r\n            \"¡esa NO es la actitud, para nada!\",\r\n            \"¡a cholón!\",\r\n            \"¿quién me ha robado el té?\",\r\n            \"¡alumna favorita!\",\r\n            \"lo he puesto mal\",\r\n            \"lo puot peor\"\r\n          ]}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      chatbotOpen,\r\n      handleChatbot,\r\n      btnBeer,\r\n      onClickClose,\r\n      closeModal,\r\n      onClickBeer,\r\n      handleTea,\r\n      tea\r\n    } = this.props;\r\n    return (\r\n      <div className=\"home\">\r\n        {this.ReactTypingEffectDemo()}\r\n        <div className={`home__chatbot ${chatbotOpen ? 'open' : 'closed-cid'}`}>\r\n          {chatbotOpen ? \r\n            <Chatbot handleChatbot={handleChatbot} />\r\n           : \r\n            <div className=\"home__chatbot--closed\" onClick={handleChatbot}>\r\n              <div className=\"home__chatbot--closed-cid\">\r\n                <div className=\"cid__hood\"></div>\r\n                <div className=\"cid__helmet\"></div>\r\n                <div className=\"cid__nose\"></div>\r\n                <div className=\"cid__left-eye\"></div>\r\n                <div className=\"cid__right-eye\"></div>\r\n                <div className=\"cid__beard\"></div>\r\n                <div className=\"cid__mouth\"></div>\r\n              </div>\r\n              <p className=\"home__chatbot--closed-text\">Hola!</p>\r\n            </div>\r\n          }\r\n        </div>\r\n          {tea ? <Tea handleTea={handleTea} /> : null}\r\n        <div className='home__buttons--container'>\r\n          {btnBeer ? (\r\n            <BeerBtn onClickClose={onClickClose} closeModal={closeModal} />\r\n          ) : null}\r\n          <div className=\"beer__btn\" onClick={onClickBeer}>\r\n            ¿Cerveza?\r\n          </div>\r\n          <div className=\"home__tea--button\" onClick={handleTea}>\r\n            ¿Un té rico?\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","// TweetJS.com - Display your tweets on your website using Javascript alone\r\n// Copyright 2019 Infinite Loop Development Ltd - InfiniteLoop.ie\r\n// Do not remove this notice.\r\n\r\nexport const TweetJs = {\r\n  ListTweetsOnUserTimeline: function(screenName, callback) {\r\n    TweetJs._callApi(\r\n      {\r\n        Action: 'ListTweetsOnUserTimeline',\r\n        ScreenName: screenName\r\n      },\r\n      callback\r\n    );\r\n  },\r\n  Search: function(query, callback) {\r\n    TweetJs._callApi(\r\n      {\r\n        Action: 'Search',\r\n        Query: query\r\n      },\r\n      callback\r\n    );\r\n  },\r\n  _callApi: function(request, callback) {\r\n    var xhr = new XMLHttpRequest();\r\n    URL = 'https://www.tweetjs.com/API.aspx';\r\n    xhr.open('POST', URL);\r\n    xhr.onreadystatechange = function() {\r\n      if (this.readyState === XMLHttpRequest.DONE && this.status === 200) {\r\n        callback(JSON.parse(xhr.response));\r\n      }\r\n    };\r\n    xhr.send(JSON.stringify(request));\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport { TweetJs } from '../../services/tweetjs';\r\nimport { TwitterTweetEmbed } from 'react-twitter-embed';\r\nimport './Tweets.scss';\r\n\r\nexport default class Tweets extends Component {\r\n  componentDidMount() {\r\n    TweetJs.Search('%23tuertopreferido', data => {\r\n      this.props.updateTweets(data);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { tweets } = this.props;\r\n    return (\r\n      <ul className=\"tweet__list\">\r\n        {tweets.map(id => (\r\n          <li className=\"tweet__item\" key={id}>\r\n            <TwitterTweetEmbed tweetId={id} options={{ width: '320px' }} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","const fetchUrl = (url) => fetch(url).then(response=> response.json());\r\n\r\nexport default fetchUrl;","import React, {useEffect, useState} from 'react';\r\nimport './WhatsNext.scss';\r\nimport fetchUrl from '../../services/fetchUrl';\r\n\r\nconst seriesUrl = 'http://api.tvmaze.com/search/shows?q=';\r\n\r\nconst WhatsNext = () => {\r\n    const [ seriesList, /**setSeriesList**/ ] = useState([]);\r\n    const [ randomSelection, setRandomSelection ] = useState(\"\");\r\n    const [ seriesResult, setSeriesResult ] = useState([])\r\n\r\n    \r\n    const handleChange = (e) => {\r\n        const inputValue = e.currentTarget.value;\r\n        fetchUrl(seriesUrl + inputValue)\r\n        .then(data => {\r\n            console.log(data);\r\n            setSeriesResult(data);\r\n        });\r\n    }\r\n\r\n    const buildList = () => {\r\n        return seriesList.map((serie, index) => <li className=\"whats-next__item\" key={index}>{serie}</li>)\r\n    }\r\n\r\n    const buildSearchList = () => {\r\n        return seriesResult.map((serie, index) => <li className=\"whats-next__item\" onClick={''} key={index}>{serie.show.name}</li>)\r\n    }\r\n\r\n    const handleRandomClick = () => {\r\n        const randomNumber = Math.floor(Math.random() * seriesList.length);\r\n        const suggestion = seriesList[randomNumber];\r\n        setRandomSelection(suggestion);\r\n    }\r\n\r\n    const buildSelectSection = () => {\r\n        const emptyMessage = \"No suggestions. Give it a try!\";\r\n        const suggestionOrEmpty = randomSelection ? randomSelection : emptyMessage;\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <h3 className=\"whats-next__selection__title\">{suggestionOrEmpty}</h3>\r\n                <button className=\"whats-next__selection__button\" onClick={handleRandomClick}>Help me decide!</button>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <section className=\"whats-next__container\">\r\n            <img src=\"https://media.giphy.com/media/1XgIXQEzBu6ZWappVu/giphy.gif\" alt=\"work in progress\"/>\r\n            <p>Chato, aquí no hay ná que ver... ¡de momento!</p>\r\n            <div className=\"whats-next__content\">\r\n                <h2 className=\"whats-next__form__subtitle\">\r\n                    Fill the list with movies or series you want to watch. \r\n                    If you doesn't know what to watch next, hit the button and let me decide for you\r\n                </h2>\r\n                <div className=\"whats-next__form__container\">\r\n                    <label className=\"whats-next__form__label\" htmlFor='series'>Series</label>\r\n                    <input\r\n                        className=\"whats-next__form__input\"\r\n                        type=\"text\"\r\n                        name=\"series\"\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n                <ul className=\"whats-next__search-list\">\r\n                    {buildSearchList()}\r\n                </ul>\r\n                <ul className=\"whats-next__list\">\r\n                    {buildList()}\r\n                </ul>\r\n                <div className=\"whats-next__selection__container\">\r\n                    {buildSelectSection()}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n} \r\n\r\nexport default WhatsNext;","import React from 'react';\r\nimport './Horoscope.scss';\r\n\r\nlet accData = [];\r\n\r\nclass Horoscope extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      alertMessage: false,\r\n      modalEmoji: false\r\n    }\r\n\r\n    this.getResultHoroscope = this.getResultHoroscope.bind(this);\r\n    this.closeEmoji = this.closeEmoji.bind(this);\r\n  }\r\n\r\n  getResultHoroscope(event) {\r\n    event.preventDefault();\r\n    if(accData.length === 0){\r\n      this.setState({ alertMessage: true })\r\n    } else {\r\n      const result = accData.reduce((a, b) => a + b);\r\n\r\n      if(accData.length >= 4) {\r\n        this.props.getHoroscope(result);\r\n        this.setState({ alertMessage: false, modalEmoji: true })\r\n      } else{\r\n        this.setState({ alertMessage: true })\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  sendValueToConstructor(event) {\r\n    const value = event.currentTarget.value;\r\n    const data = parseInt(value);\r\n    accData.push(data);\r\n    console.log(accData)\r\n  }\r\n\r\n  showEmoji(emojiAsign) {\r\n    if(emojiAsign === 'unicornio') {\r\n      return 'images/emojis/unicorn.png'\r\n    } else if(emojiAsign === 'pizza') {\r\n      return 'images/emojis/pizza.png'\r\n    } else if (emojiAsign === 'caca') {\r\n      return 'images/emojis/caca.png'\r\n    }\r\n  }\r\n\r\n  closeEmoji() {\r\n    this.setState({ modalEmoji: false })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { horoscope } = this.props;\r\n\r\n    let messageEmoji = '';\r\n\r\n    if(horoscope === 'unicornio') {\r\n      messageEmoji = <p className='horoscope__modal--text'>Hoy eres el UNICORNIO, ¡estás que lo petas!</p>;\r\n    } else if(horoscope === 'pizza') {\r\n      messageEmoji = <p className='horoscope__modal--text'>Hoy eres la PIZZA, ¡date un homenaje!</p>;\r\n    } else if (horoscope === 'caca') {\r\n      messageEmoji = <p className='horoscope__modal--text'>Hoy eres la CACA... ¡pero el día va a ir a mejor!</p>;\r\n    }\r\n\r\n    return(\r\n      <div className=\"horoscope\">\r\n\r\n        <form action=\"\" className=\"horoscope__form\">\r\n          <fieldset className=\"horoscope__form--fieldset\">\r\n            <legend className=\"horoscope__form--legend\">¿Qué día crees que es hoy?</legend>\r\n              <label htmlFor=\"1\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"1\" id=\"1\" value=\"2\"/> \r\n                ¿Hoy es viernes? ¡No puede ser!\r\n              </label>\r\n              <label htmlFor=\"2\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"1\" id=\"2\" value=\"3\"/> \r\n                Hoy es martes, seguro.\r\n              </label>\r\n              <label htmlFor=\"3\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"1\" id=\"3\" value=\"1\"/> \r\n                Domingo, no puedo desayunar en el bar de abajo.\r\n              </label>\r\n          </fieldset>\r\n          <fieldset className=\"horoscope__form--fieldset\">\r\n            <legend className=\"horoscope__form--legend\">¿Qué te gustaría desayunar hoy?</legend>\r\n              <label htmlFor=\"4\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"2\" id=\"5\" value=\"3\"/>\r\n                Un té rico.\r\n              </label>\r\n              <label htmlFor=\"5\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"2\" id=\"6\" value=\"2\"/>\r\n                Una Alhambra fresquita.\r\n              </label>\r\n              <label htmlFor=\"6\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"2\" id=\"7\" value=\"1\"/>\r\n                Un Jack Daniels.\r\n              </label>\r\n          </fieldset>\r\n          <fieldset className=\"horoscope__form--fieldset\">\r\n            <legend className=\"horoscope__form--legend\">¿Cuántas horas de siesta te hacen falta hoy?</legend>\r\n              <label htmlFor=\"7\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"3\" id=\"9\" value=\"1\"/>\r\n                Nunca son suficientes.\r\n              </label>\r\n              <label htmlFor=\"8\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"3\" id=\"10\" value=\"3\"/>\r\n                Voy a cerrar los ojos cinco minuticos.\r\n              </label>\r\n              <label htmlFor=\"9\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"3\" id=\"11\" value=\"2\"/>\r\n                Hasta que se mueva Bonaparty.\r\n              </label>\r\n          </fieldset>\r\n          <fieldset className=\"horoscope__form--fieldset\">\r\n            <legend className=\"horoscope__form--legend\"><em>Bonus</em> ¿Estás esperando un pedido de Seur?</legend>  \r\n              <label htmlFor=\"10\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"4\" id=\"13\" value=\"-10\"/>\r\n                Sí\r\n              </label>\r\n              <label htmlFor=\"11\" className=\"horoscope__label\">\r\n                <input onChange={this.sendValueToConstructor} type=\"radio\" className=\"horoscope__input\" name=\"4\" id=\"14\" value=\"0\"/>\r\n                No.\r\n              </label>\r\n            </fieldset>\r\n          <button onClick={this.getResultHoroscope} className=\"form__button\" type=\"submit\">click</button>\r\n          {this.state.alertMessage ? <p className='form__alert-message'>Chato, ¡rellena todos los campos!</p> : ''}\r\n        </form>\r\n        { this.state.modalEmoji ?\r\n          <div className='horoscope__modal--container'>\r\n            <div className='horoscope__modal--content'>\r\n            <i className=\"fas fa-times tea__close\" onClick={this.closeEmoji}></i>\r\n              <img className='horoscope__modal--emoji' src={this.showEmoji(horoscope)} alt='your emoji'></img>\r\n              { messageEmoji }\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Horoscope;","const catFacts = [\r\n  {\r\n    id: 0,\r\n    fact : 'The cat appears to be the only domestic companion animal not mentioned in the Bible'\r\n  },\r\n  {\r\n    id: 1,\r\n    fact : 'Cats have supersonic hearing'\r\n  },\r\n  {\r\n    id: 2,\r\n    fact : 'The first cat in space was a French cat named Felicette. She survived the trip.'\r\n  },\r\n  {\r\n    id: 3,\r\n    fact : 'In ancient Egypt, when a family cat died, all family members would shave their eyebrows as a sign of mourning.'\r\n  },\r\n  {\r\n    id: 4,\r\n    fact : 'The tiniest cat on record is Mr. Pebbles, a 2-year-old cat that weighed 1.3 kg) and was 15.5 cm high.'\r\n  },\r\n  {\r\n    id: 5,\r\n    fact : 'A domestic cat can run at speeds of 30 mph.'\r\n  },\r\n  {\r\n    id: 6,\r\n    fact : 'Abraham Lincoln loved cats. He had four of them while he lived in the White House.'\r\n  },\r\n  {\r\n    id: 7,\r\n    fact : 'A cats field of vision is about 185 degrees.'\r\n  },\r\n  {\r\n    id: 8,\r\n    fact : 'A cat will tremble or shiver when it is in extreme pain.'\r\n  },\r\n  {\r\n    id: 9,\r\n    fact : 'Cats dislike citrus scent.'\r\n  },\r\n  {\r\n    id: 10,\r\n    fact : 'There is a species of cat smaller than the average housecat. It is native to Africa.'\r\n  },\r\n  {\r\n    id: 11,\r\n    fact : `Cats respond better to women than to men, probably due to the fact that women's voices have a higher pitch.`\r\n  },\r\n  {\r\n    id: 12,\r\n    fact : 'If a cat is frightened, the hair stands up fairly evenly all over the body.'\r\n  },\r\n  {\r\n    id: 13,\r\n    fact : `Cats don't have sweat glands over their bodies like humans do. Instead, they sweat only through their paws.`\r\n  },\r\n  {\r\n    id: 14,\r\n    fact : 'People who are allergic to cats are actually allergic to cat saliva.'\r\n  },\r\n  {\r\n    id: 15,\r\n    fact : 'A cat has two vocal chords, and can make over 100 sounds.'\r\n  },\r\n  {\r\n    id: 16,\r\n    fact : 'Cats see six times better in the dark and at night than humans.'\r\n  },\r\n  {\r\n    id: 17,\r\n    fact: 'A steady diet of dog food may cause blindness in your cat - it lacks taurine.'\r\n  },\r\n  {\r\n    id: 18,\r\n    fact: 'A steady diet of dog food may cause blindness in your cat - it lacks taurine.'\r\n  },\r\n  {\r\n    id: 19,\r\n    fact: 'The domestic cat is the only species able to hold its tail vertically while walking.'\r\n  }\r\n];\r\n\r\nexport const getCatFact = () => {\r\n  const randomNumber = Math.floor(Math.random() * 20);\r\n  return catFacts[randomNumber];\r\n};\r\n","import React, { Component } from 'react';\r\nimport { getCat } from '../../services/getCat';\r\nimport { getCatFact } from '../../services/getCatFact';\r\nimport './RandomCats.scss';\r\n\r\nclass RandomCats extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      catData: {},\r\n      catFact: '',\r\n    }\r\n    this.handleCatFetch = this.handleCatFetch.bind(this);\r\n    this.handleCatFactFetch = this.handleCatFactFetch.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleCatFactFetch();\r\n  }\r\n\r\n  handleCatFetch() {\r\n    return getCat()\r\n      .then(data => this.setState({catData: data[0]}))\r\n  }\r\n\r\n  handleCatFactFetch() {\r\n    const catFact = getCatFact()\r\n    this.setState({catFact : catFact.fact});\r\n  }\r\n\r\n  render(){\r\n    const { catData } = this.state;\r\n    const { handleCatFetch } = this;\r\n    return (\r\n      <div className=\"random__cat-container\">\r\n        <h2 className=\"random__cat-title\">Welcome to the random cat page</h2>\r\n        <p className=\"random__cat-subtitle\">\r\n          Click on the button to get a random cat!\r\n        </p>\r\n        <button className=\"button random__cat-button\" onClick={handleCatFetch}>\r\n          Click me\r\n        </button>\r\n        {catData.url && (\r\n          <img\r\n            src={catData.url}\r\n            alt={`Random cat ${catData.id}`}\r\n            className=\"random__cat-image\"\r\n          />\r\n        )}\r\n        {catData.url && (\r\n          <div className=\"twitter__container\">\r\n            <a\r\n              className=\"button twitter__button\"\r\n              href={`http://twitter.com/share?text=Did you know...${this.state.catFact}&url=${catData.url}`}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              Share this cat picture on Twitter!\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomCats;\r\n","const ENDPOINT = 'https://api.thecatapi.com/v1/images/search';\r\n\r\nexport const getCat = () => {\r\n  return fetch(ENDPOINT)\r\n    .then(response => response.json())\r\n    .catch(error => console.error(error))\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport { Link, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Landing from '../Landing/index';\r\nimport Home from '../Home/index';\r\nimport Tweets from '../Tweets/index';\r\nimport WhatsNext from '../WhatsNext/index';\r\nimport Horoscope from '../Horoscope/index';\r\nimport RandomCats from '../RandomCats';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tweets: [],\r\n      chatbotOpen: false,\r\n      btnBeer: false,\r\n      closeModal: false,\r\n      horoscope: '',\r\n      tea: false\r\n    };\r\n    \r\n    this.getHoroscope = this.getHoroscope.bind(this);\r\n    this.handleChatbot = this.handleChatbot.bind(this);\r\n    this.handleTea = this.handleTea.bind(this);\r\n  }\r\n\r\n  updateTweets = tweetsResponse => {\r\n    this.setState({\r\n      tweets: tweetsResponse.statuses.map(({ id_str }) => id_str)\r\n    });\r\n  };\r\n\r\n  getHoroscope(number) {\r\n\r\n    let emojiHoroscope = '';\r\n\r\n    if (number >= 9) {\r\n      emojiHoroscope = 'unicornio';\r\n    } else if (number >= 5 && number <= 8) {\r\n      emojiHoroscope = 'pizza';\r\n    } else if (number <= 4 ) {\r\n      emojiHoroscope = 'caca';\r\n    }\r\n\r\n    this.setState({horoscope: emojiHoroscope});\r\n    \r\n    localStorage.setItem('emoji', emojiHoroscope);\r\n  }\r\n\r\n  handleChatbot () {\r\n    this.setState({chatbotOpen: !this.state.chatbotOpen});\r\n  }\r\n\r\n  onClickBeer = () => {\r\n    this.setState({ btnBeer: true })\r\n  }\r\n\r\n  onClickClose = () => {\r\n    this.setState({ closeModal: false ? true : false, btnBeer: false })\r\n  }\r\n  \r\n  handleTea () {\r\n    this.setState({tea : !this.state.tea});\r\n    console.log(this.state.tea);\r\n  }\r\n\r\n  render() {\r\n    const { tweets, btnBeer, closeModal, chatbotOpen, tea, horoscope } = this.state;\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <header>\r\n          <nav>\r\n            <ul className='app__nav'>\r\n              <li>\r\n                <Link to=\"/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/tweets\">Tweets</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/whats-next\">What should I watch next?</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/horoscope\">Horoscope</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/cats\">Random Cats</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </header>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/landing\" component={Landing}/>\r\n            <Route\r\n            exact path=\"/home\"\r\n            render={() => (\r\n              <Home chatbotOpen={chatbotOpen}\r\n                handleChatbot={this.handleChatbot}\r\n                onClickBeer={ this.onClickBeer }\r\n                btnBeer={ btnBeer }\r\n                onClickClose={ this.onClickClose }\r\n                closeModal={ closeModal }\r\n                tea={tea}\r\n                handleTea={this.handleTea} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact path=\"/tweets\"\r\n              render={() => (\r\n                <Tweets updateTweets={this.updateTweets} tweets={tweets} />\r\n              )}\r\n            />\r\n            <Route exact path=\"/whats-next\" component={WhatsNext} />\r\n            <Route\r\n              exact path=\"/horoscope\"\r\n              render={() => (\r\n                <Horoscope getHoroscope={this.getHoroscope} horoscope={horoscope}/>\r\n              )}\r\n            />\r\n            <Route exact path=\"/cats\" component={RandomCats} />\r\n            <Redirect from=\"/\" to=\"/landing\"/>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/index';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}